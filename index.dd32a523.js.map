{"mappings":"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","sources":["src/index.js","static/iconMap.js"],"sourcesContent":["import iconMap from \"../static/iconMap\";\n\nvar stylePrefix = $('input[name=style]:checked').val(); // stylePrefix is the value of the checked radio box. this value will be used as class name of the keys to apply a particular style to the keys\nvar userText = \"\", keysArray = \"\", htmlCode = \"\", fileSaverSupported; // Pre Defining some variables\n\ntry { let isFileSaverSupported = !!new Blob; fileSaverSupported = true; }\ncatch (e) { fileSaverSupported = false; }\n\nfunction dataURItoBlob(dataURI) {\n\tvar byteString = atob(dataURI.split(',')[1]);\n\tvar mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\n\tvar ab = new ArrayBuffer(byteString.length);\n\tvar ia = new Uint8Array(ab);\n\tfor (var i = 0; i < byteString.length; i++) { ia[i] = byteString.charCodeAt(i); }\n\tvar blob = new Blob([ab], {type: mimeString});\n\treturn blob;\n}\n\nfunction hideLoader(hide) {\n\tif (hide == true) $(\"#loader\").css(\"display\", \"none\");\n\tif (hide == false) $(\"#loader\").css(\"display\", \"block\");\n}\n\nfunction appendImg(url) { // appendImg function to append generated image to the output div\n\tlet img = new Image(); // Making new Image HTML Element\n\timg.src = url; // Changing new image's url\n\t$(\"#img-preview\").html(\"\"); // Emptying the output\n\t$(\"#img-preview\").append(img); // Appending the new created image element to our output\n\t$(\"#preview-div\").css(\"display\", \"block\"); // And changing the output element's parent display to block\n}\n\nfunction saveAsPng() { // Function to generate HTML to PNG\n\thideLoader(false)\n\tlet element = $('#htmlCode'), scale = prompt(\"Enter the Scale: \", 2);\n\n\tif (scale == null) return; // If user clicked cancel in the prompt then return nothing to stop the function\n\tif (isNaN(scale) === false) scale = parseInt(scale); // If the scale is a number either it's in string format or integer format convert it to integer format\n\telse scale = 2; // If the given input is not a integer in string format or integer format than set the scale to 2\n\n\tif (scale > 10) if (!confirm(\"Are You Sure? Scale More than 10 Can Make your Device Lag\")) return; // If scale is greater than 10 then confirm if the user wants to continue because I tested and any scale greater than 10 can cause performance issue\n\n\t/*  So here I am getting the height/width of the element times the scale\n\t\tand rounding it to the nearest integer and getting the final number\n\t\twhich would be divisible by 10 */\n\tlet Width = Math.round(element.width() * scale/10)*10;\n\tlet Height = Math.round(element.height() * scale/10)*10;\n\n\tdomtoimage.toPng(element[0], {\n\t\t\twidth: Width, // Setting The width of the output Image\n\t\t\theight: Height, // Setting the height of the output image\n\t\t\tstyle: { transform: 'scale('+scale+')', transformOrigin: 'top left'} // Setting the scale and the transform origin\n\t\t})\n\t\t.then(function (dataUrl) {\n\t\t\tif (fileSaverSupported === true) saveAs(dataURItoBlob(dataUrl), \"key2Img-\"+Width+\"x\"+Height+\".png\");\n\t\t\telse {\n\t\t\t\tappendImg(dataUrl);\n\t\t\t\t$(\"#output-demension\").text(\"Height: \"+Height+\"px, Width: \"+Width);\n\t\t\t}\n\t\t\thideLoader(true)\n\t\t}) // calling the appendImg function and passing the generated image data as parameter and then changing the output div's text with the respective height and width\n\t\t.catch(function (error) { alert('oops, something went wrong!\\n' + error); hideLoader(true) }); // If something goes wrong calling the alert function with showing the error\n}\n\nfunction saveAsJpeg() { // Function To Generate HTML To JPG\n\thideLoader(false)\n\tlet element = $('#htmlCode'), scale = prompt(\"Enter the Scale: \", 2), quality = prompt(\"Quality (0.1 - 1): \", 0.5);\n\n\tif (scale == null || quality == null) return;\n\tif (isNaN(scale) === false || isNaN(quality) === false) { scale = parseInt(scale); quality = parseFloat(quality) }\n\tif (scale === 0 || quality === 0) { scale = 1; parseFloat(0.5); }\n\tif (quality > 1) quality = 0.5;\n\n\tif (scale > 10) if (!confirm(\"Are You Sure? Scale More than 10 Can Make your Device Lag\")) return;\n\n\t//  So Here's some dope Einstein level calculation done here, you better don't try to understand it\n\tlet Width = Math.round(element.width() * scale/10)*10;\n\tlet Height = Math.round(element.height() * scale/10)*10;\n\n\tdomtoimage.toJpeg(element[0], {\n\t\t\tquality: quality,\n\t\t\twidth: Width, // Setting The width of the output Image\n\t\t\theight: Height, // Setting the height of the output image\n\t\t\tstyle: { transform: 'scale('+scale+')', transformOrigin: 'top left', background: \"#fff\"} // Setting the scale and the transform origin\n\t\t})\n\t\t.then(function (dataUrl) {\n\t\t\tif (fileSaverSupported === true) saveAs(dataURItoBlob(dataUrl), \"key2Img-\"+Width+\"x\"+Height+\".jpeg\");\n\t\t\telse {\n\t\t\t\tappendImg(dataUrl);\n\t\t\t\t$(\"#output-demension\").text(\"Height: \"+Height+\"px, Width: \"+Width);\n\t\t\t}\n\t\t\thideLoader(true)\n\t\t})\n\t\t.catch(function (error) { alert('oops, something went wrong!\\n' + error); hideLoader(true) });\n}\n\nconst replaceIco = (str) => {\n\treturn str.split(' ').map((s) => iconMap[s] ?? s).join(' ');\n};\n\nfunction renderKeys() {\n\tvar userText = $('#text-input').val(); // User's Input Text\n\tvar keysArray = userText.split(\"+\").map(replaceIco); // Split user's input with + and replace any icon code in the array items with the corresponding HTML code given in iconMap.js\n\tkeysArray = $.map(keysArray, $.trim); // Trim any extra space in start or end of any item in the Array\n\tkeysArray = keysArray.filter(item => item); // Remove empty strings from the array\n\tvar htmlCode = \"\"; // Empty variable which will store all the output code\n\n\t// If Input is Empty Then Put Default Ctrl + Alt + C in HTML Preview\n\tif (userText == \"\") {\n\t\thtmlCode = \"<kbd class=\"+stylePrefix+\">Ctrl</kbd>+<kbd class=\"+stylePrefix+\">Alt</kbd>+<kbd class=\"+stylePrefix+\">C</kbd>\";\n\t}\n\telse {\n\t\tfor (let i = 0; i < keysArray.length; i++) { // Run a For Loop\n\t\t\tif (i == keysArray.length - 1) htmlCode += \"<kbd class=\"+stylePrefix+\">\"+ keysArray[i] + \"</kbd>\"; // If the current element is the last element then don't use + in the end\n\t\t\telse htmlCode += \"<kbd class=\"+stylePrefix+\">\"+ keysArray[i] + \"</kbd>+\"; // Else Put code with +\n\t\t}\n\t}\n\n\t$('#kbdCode').html(htmlCode); // Finally Change the Output div's html with new one\n\treturn 0; // IDK Why i did it here LMAO\n}\n\n$(\"#saveJpg\").on(\"click\", saveAsJpeg); // Run saveAsJpeg if Jpeg Button is Clicked\n$(\"#savePng\").on(\"click\", saveAsPng); // Run saveAsPng if PNG Button is Clicked\n$('#text-input').keyup(renderKeys); // Render the user's Input when he releases any key\n$('input[name=style]').on(\"click\", function (e) { // Run a Function when ever any radio box for style is clicked\n\tstylePrefix = $('input[name=style]:checked').val(); // Get the clicked/checked radio box's value and assign it to the stylePrefix so that the key styles can be applied while rendering\n\trenderKeys(); // And Then Render Once Again to Update New Styles\n})\n\nwindow.onload = e => {\n\t// Cookies.remove(\"firstTime\");\n\tif (Cookies.get(\"firstTime\") == undefined) {\n\t\tCookies.set('firstTime', 'no', { expires: 365 });\n\t\tintroJs().setOptions({ steps: introSteps }).start();\n\t}\n\n\trenderKeys(); // Calling renderKeys Function when the window loads\n}","const iconMap = {\n\t\"ico.Command\": '⌘',\n\t\"ico.Enter\": '⏎',\n\t\"ico.Win10\": '<i class=\"fab fa-windows\"></i>',\n\t\"ico.Apple\": '<i class=\"fab fa-apple\"></i>',\n\t\"ico.Android\": '<i class=\"fab fa-android\"></i>',\n\t\"ico.Robot\": '<i class=\"fas fa-robot\"></i>',\n\t\"ico.Linux\": '<i class=\"fab fa-linux\"></i>',\n\t\"ico.Ubuntu\": '<i class=\"fab fa-ubuntu\"></i>',\n\t\"ico.Suse\": '<i class=\"fab fa-suse\"></i>',\n\t\"ico.Redhat\": '<i class=\"fab fa-redhat\"></i>',\n\t\"ico.Fedora\": '<i class=\"fab fa-fedora\"></i>',\n\t\"ico.Centos\": '<i class=\"fab fa-centos\"></i>',\n\t\"ico.Unity\": '<i class=\"fab fa-unity\"></i>',\n\t\"ico.Detective\": '<i class=\"fas fa-user-secret\"></i>',\n\t\"ico.Snapchat\": '<i class=\"fab fa-snapchat\"></i>',\n\t\"ico.Whatsapp\": '<i class=\"fab fa-whatsapp\"></i>',\n\t\"ico.Instagram\": '<i class=\"fab fa-instagram\"></i>',\n\t\"ico.Google\": '<i class=\"fab fa-google\"></i>',\n\t\"ico.Microsoft\": '<i class=\"fab fa-microsoft\"></i>',\n\t\"ico.Twitter\": '<i class=\"fab fa-twitter\"></i>',\n\t\"ico.Facebook\": '<i class=\"fab fa-facebook\"></i>',\n\t\"ico.Server\": '<i class=\"fas fa-server\"></i>',\n\t\"ico.IE\": '<i class=\"fab fa-internet-explorer\"></i>',\n\t\"ico.HDD\": '<i class=\"fas fa-hdd\"></i>',\n\t\"ico.Search\": '<i class=\"fas fa-search\"></i>',\n\t\"ico.Question\": '<i class=\"far fa-question-circle\"></i>',\n\t\"ico.Music\": '<i class=\"fas fa-music\"></i>',\n\t\"ico.AudioMute\": '<i class=\"fas fa-volume-mute\"></i>',\n\t\"ico.AudioDown\": '<i class=\"fas fa-volume-down\"></i>',\n\t\"ico.AudioUp\": '<i class=\"fas fa-volume-up\"></i>',\n\t\"ico.AudioOff\": '<i class=\"fas fa-volume-off\"></i>',\n\t\"ico.Forward\": '<i class=\"fas fa-forward\"></i>',\n\t\"ico.Backward\": '<i class=\"fas fa-backward\"></i>',\n\t\"ico.Home\": '<i class=\"fas fa-home\"></i>',\n\t\"ico.Chimp\": '<i class=\"fab fa-mailchimp\"></i>',\n\t\"ico.Mail\": '<i class=\"far fa-envelope\"></i>',\n\t\"ico.Laptop\": '<i class=\"fas fa-laptop\"></i>',\n\t\"ico.Star\": '<i class=\"fas fa-star\"></i>',\n\t\"ico.Terminal\": '<i class=\"fas fa-terminal\"></i>',\n\t\"ico.Link\": '<i class=\"fas fa-external-link-alt\"></i>',\n\t\"ico.Github\": '<i class=\"fab fa-github\"></i>',\n\t\"ico.Youtube\": '<i class=\"fab fa-youtube\"></i>',\n\t\"ico.Mobile\": '<i class=\"fas fa-mobile\"></i>',\n\t\"ico.Tablet\": '<i class=\"fas fa-tablet-alt\"></i>',\n\t\"ico.Headphone\": '<i class=\"fas fa-headphones-alt\"></i>',\n\t\"ico.Mic\": '<i class=\"fas fa-microphone\"></i>',\n\t\"ico.Bluetooth\": '<i class=\"fab fa-bluetooth\"></i>',\n\t\"ico.Js\": '<i class=\"fab fa-js\"></i>',\n\t\"ico.Keyboard\": '<i class=\"fas fa-keyboard\"></i>',\n\t\"ico.Discord\": '<i class=\"fab fa-discord\"></i>',\n\t\"ico.Playstation\": '<i class=\"fab fa-playstation\"></i>',\n\t\"ico.Git\": '<i class=\"fab fa-git-alt\"></i>',\n\t\"ico.Xbox\": '<i class=\"fab fa-xbox\"></i>',\n\t\"ico.Usb\": '<i class=\"fab fa-usb\"></i>',\n}\n\nexport default iconMap;"],"names":["$7b95a93d85ab9a01$var$fileSaverSupported","$732039da4b903814$export$2e2bcd8739ae039","$7b95a93d85ab9a01$var$stylePrefix","$","val","Blob","e","$7b95a93d85ab9a01$var$dataURItoBlob","dataURI","byteString","atob","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","type","$7b95a93d85ab9a01$var$hideLoader","hide","css","$7b95a93d85ab9a01$var$appendImg","url","img","Image","src","html","append","$7b95a93d85ab9a01$var$replaceIco","str","map","s","join","$7b95a93d85ab9a01$var$renderKeys","userText","keysArray","trim","filter","item","htmlCode","on","element","scale","prompt","quality","isNaN","parseInt","parseFloat","confirm","Width","Math","round","width","Height","height","domtoimage","toJpeg","style","transform","transformOrigin","background","then","dataUrl","saveAs","text","catch","error","alert","toPng","keyup","window","onload","undefined","Cookies","get","set","expires","introJs","setOptions","steps","introSteps","start"],"version":3,"file":"index.dd32a523.js.map"}